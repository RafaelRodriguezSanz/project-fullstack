name: Backport to Develop

on:
  push:
    branches:
      - master

jobs:
  backport:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Determine Release Version
        id: version
        run: |
          # Configurar el token de acceso personal directamente en los comandos de Git
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git submodule foreach 'git config --local credential.helper store'

          git checkout master && git fetch && git pull -f
          # Obtener el número de versión de la última release en master
          LAST_RELEASE=$(git describe --abbrev=0 --tags master)
          VERSION=$(echo $LAST_RELEASE | grep -oP 'release/\d+\.\d+\.\d+')

          # Salida del número de versión para que otros pasos lo usen
          echo "::set-output name=version::$VERSION"

      - name: Backport to Develop
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git submodule foreach 'git config --local credential.helper store'
          echo "Starting backport"
          # Asegúrate de tener la rama 'develop' actualizada
          git checkout develop
          git pull origin develop
          git submodule update --init --recursive

          # Realiza el backport desde 'master' a 'develop'
          git checkout master
          git pull origin master
          git submodule update --init --recursive

          git checkout develop
          git merge master --allow-unrelated-histories

          # Resuelve conflictos si es necesario
          # git mergetool, git add, git commit si hay conflictos

          # Empuja los cambios a la rama 'develop'
          git push origin develop

      - name: Create a Pull Request
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git submodule foreach 'git config --local credential.helper store'
          # Crear una nueva rama para el backport
          git checkout -b backport-${{ steps.version.outputs.version }}

          # Empujar la nueva rama a la rama 'develop'
          git push origin backport-${{ steps.version.outputs.version }}

          # Crear un Pull Request automáticamente para el backport
          curl -X POST \
            -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls" \
            -d "{\"base\":\"develop\",\"head\":\"backport-${{ steps.version.outputs.version }}\",\"title\":\"Backport ${{ steps.version.outputs.version }}\",\"body\":\"Automated backport from master\"}"

        env:
            ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      